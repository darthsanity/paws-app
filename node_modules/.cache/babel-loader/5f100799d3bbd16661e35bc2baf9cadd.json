{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TXY1572\\\\darthsanity\\\\capstone\\\\frontend\\\\react-paws-app\\\\react-boilerplate\\\\src\\\\Components\\\\Posts\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport CreatePostForm from './CreatePostForm';\nimport EditPost from './EditPost';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.destroyPost = async id => {\n      await deletePost(id);\n      const allPosts = this.state.posts;\n      const remainingPosts = allPosts.filter(post => {\n        return post.id !== id;\n      });\n      this.setState({\n        posts: remainingPosts\n      });\n      this.props.history.push('/');\n    };\n\n    this.updatePost = async (e, id, values) => {\n      e.preventDefault();\n      const updatedPost = await editPost(id, values);\n      const allPosts = this.state.posts;\n      const editedPost = allPosts.map(post => {\n        return post.id === parseInt(id) ? updatedPost : post;\n      });\n      this.setState({\n        posts: editedPost\n      });\n      this.props.history.push('/posts');\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    const posts = await fetchAllPosts();\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, this.state.posts && this.state.posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Link, {\n        to: `/post/show/${post._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: post.image,\n        alt: \"animal\",\n        width: \"200px\",\n        height: \"200px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, post.post), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, post.animal.name)));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/new/post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Create New Post\"), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/posts/edit/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(EditPost, {\n          id: this.props.user.id,\n          posts: this.state.posts,\n          updatePost: this.updatePost,\n          postId: this.state.posts._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 32\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default PostContainer;","map":{"version":3,"sources":["C:/Users/TXY1572/darthsanity/capstone/frontend/react-paws-app/react-boilerplate/src/Components/Posts/PostContainer.js"],"names":["React","Component","fetchAllPosts","createPost","editPost","deletePost","Route","Link","withRouter","CreatePostForm","EditPost","PostContainer","constructor","props","destroyPost","id","allPosts","state","posts","remainingPosts","filter","post","setState","history","push","updatePost","e","values","preventDefault","updatedPost","editedPost","map","parseInt","componentDidMount","render","_id","image","animal","name","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\n\r\nimport CreatePostForm from './CreatePostForm';\r\nimport EditPost from './EditPost';\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const posts = await fetchAllPosts();\r\n        this.setState({\r\n            posts\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    destroyPost = async(id) => {\r\n        await deletePost(id);\r\n        const allPosts = this.state.posts;\r\n        const remainingPosts = allPosts.filter(post => {\r\n            return post.id !== id\r\n        })\r\n        this.setState({\r\n            posts: remainingPosts\r\n        })\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    updatePost = async(e, id, values) => {\r\n        e.preventDefault();\r\n        const updatedPost = await editPost(id, values);\r\n        const allPosts = this.state.posts;\r\n        const editedPost = allPosts.map(post => {\r\n            return post.id === parseInt(id) ? updatedPost : post\r\n        })        \r\n        this.setState({\r\n            posts: editedPost\r\n        })\r\n        this.props.history.push('/posts');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.posts && this.state.posts.map(post => {\r\n                    return <div> <Link to={`/post/show/${post._id}`}>\r\n                        <img src={post.image} alt=\"animal\" width=\"200px\" height=\"200px\" />\r\n                        <p>{post.post}</p>\r\n                        <p>{post.animal.name}</p>\r\n                        </Link>\r\n                    </div>\r\n                })} \r\n                <div>\r\n                <Link to=\"/new/post\">Create New Post</Link>\r\n                   \r\n\r\n                <Route exact path=\"/posts/edit/:id\"\r\n                    render={(props) => {\r\n                        return <EditPost  \r\n                        id={this.props.user.id}\r\n                        posts={this.state.posts}\r\n                        updatePost={this.updatePost}\r\n                        postId={this.state.posts._id}\r\n                        />\r\n                    }}\r\n                />\r\n                \r\n            \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostContainer;"]},"metadata":{},"sourceType":"module"}