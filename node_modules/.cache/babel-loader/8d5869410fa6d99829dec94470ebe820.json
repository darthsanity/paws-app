{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TXY1572\\\\darthsanity\\\\capstone\\\\frontend\\\\react-paws-app\\\\react-boilerplate\\\\src\\\\Components\\\\Posts\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport Image from 'react-native-scalable-image';\nimport CreatePostForm from './CreatePostForm';\nimport EditPost from './EditPost';\nimport ShowPost from './ShowPost';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newPost = async (e, values) => {\n      e.preventDefault();\n      const newPost = await createPost(values, this.state.currentUser.id);\n      console.log(newPost);\n      const posts = this.state.posts;\n      posts.push(newPost.data);\n      this.setState({\n        posts: posts\n      });\n      this.props.history.push('/');\n    };\n\n    this.destroyPost = async id => {\n      await deletePost(id);\n      const allPosts = this.state.posts;\n      const remainingPosts = allPosts.filter(post => {\n        return post.id !== id;\n      });\n      this.setState({\n        posts: remainingPosts\n      });\n      this.props.history.push('/');\n    };\n\n    this.updatePost = async (e, id, values) => {\n      e.preventDefault();\n      const updatedPost = await editPost(id, values);\n      const allPosts = this.state.posts;\n      console.log(updatedPost);\n      const editedPost = allPosts.map(post => {\n        return post.id === parseInt(id) ? updatedPost : post;\n      });\n      this.setState({\n        posts: editedPost\n      });\n      this.props.history.push('/');\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    const posts = await fetchAllPosts();\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.state.posts && this.state.posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Link, {\n        to: `/post/show/${post._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: post.image,\n        alt: \"animal\",\n        width: \"200px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, post.post), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, post.animal.name)), /*#__PURE__*/React.createElement(Link, {\n        to: `/post/edit/${post._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, \"Edit Post\"), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/post/edit/:id\",\n        render: props => {\n          return /*#__PURE__*/React.createElement(EditPost, {\n            id: this.props.user.id,\n            post: post,\n            updatePost: this.updatePost,\n            postId: post._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 36\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/post/show/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(ShowPost, {\n          post: this.state.posts,\n          id: props.match.params.id,\n          destroyPost: this.destroyPost,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 32\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), this.props.user && /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/new/post\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(CreatePostForm, {\n          handleSubmit: this.newPost,\n          user: this.props.user.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 34\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/new/post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Create New Post\")));\n  }\n\n}\n\nexport default withRouter(PostContainer);","map":{"version":3,"sources":["C:/Users/TXY1572/darthsanity/capstone/frontend/react-paws-app/react-boilerplate/src/Components/Posts/PostContainer.js"],"names":["React","Component","fetchAllPosts","createPost","editPost","deletePost","Route","Link","withRouter","Image","CreatePostForm","EditPost","ShowPost","PostContainer","constructor","props","newPost","e","values","preventDefault","state","currentUser","id","console","log","posts","push","data","setState","history","destroyPost","allPosts","remainingPosts","filter","post","updatePost","updatedPost","editedPost","map","parseInt","componentDidMount","render","_id","image","animal","name","user","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\nimport Image from 'react-native-scalable-image'\r\n\r\nimport CreatePostForm from './CreatePostForm';\r\nimport EditPost from './EditPost';\r\nimport ShowPost from './ShowPost';\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const posts = await fetchAllPosts();\r\n        this.setState({\r\n            posts\r\n        })\r\n    }\r\n\r\n    newPost = async (e, values) => {\r\n      e.preventDefault();\r\n      const newPost = await createPost(values, this.state.currentUser.id);\r\n      console.log(newPost);\r\n      const posts = this.state.posts;\r\n      posts.push(newPost.data);\r\n      this.setState({\r\n          posts: posts\r\n      })\r\n      this.props.history.push('/')\r\n    }\r\n\r\n    destroyPost = async(id) => {\r\n      await deletePost(id);\r\n      const allPosts = this.state.posts;\r\n      const remainingPosts = allPosts.filter(post => {\r\n          return post.id !== id\r\n      })\r\n      this.setState({\r\n          posts: remainingPosts\r\n      })\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    updatePost = async(e, id, values) => {\r\n        e.preventDefault();\r\n        const updatedPost = await editPost(id, values);\r\n        const allPosts = this.state.posts;\r\n        console.log(updatedPost)\r\n        const editedPost = allPosts.map(post => {\r\n            return post.id === parseInt(id) ? updatedPost : post\r\n        })\r\n        this.setState({\r\n            posts: editedPost\r\n        })\r\n        this.props.history.push('/');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.posts && this.state.posts.map(post => {\r\n                    return <div> <Link to={`/post/show/${post._id}`}>\r\n                        <Image src={post.image} alt=\"animal\" width=\"200px\"/>\r\n                        <p>{post.post}</p>\r\n                        <p>{post.animal.name}</p>\r\n                        </Link>\r\n                        <Link to={`/post/edit/${post._id}`}>Edit Post</Link>\r\n                        <Route exact path='/post/edit/:id'\r\n                            render={(props) => {\r\n                            return <EditPost\r\n                            id={this.props.user.id}\r\n                            post={post}\r\n                            updatePost={this.updatePost}\r\n                            postId={post._id}\r\n                        />\r\n                    }}\r\n                />\r\n                    </div>\r\n                })}\r\n\r\n                <Route exact path='/post/show/:id' render={(props) => {\r\n                        return <ShowPost\r\n                            post={this.state.posts}\r\n                            id={props.match.params.id}\r\n                            destroyPost={this.destroyPost}\r\n                        />\r\n                    }}/>\r\n                {this.props.user &&\r\n                  <Route exact path=\"/new/post\" render={() => {\r\n                          return <CreatePostForm handleSubmit={this.newPost}\r\n                              user={this.props.user.id}/>\r\n                      }}/>\r\n                }\r\n                <div>\r\n                <Link to=\"/new/post\">Create New Post</Link>\r\n\r\n\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PostContainer);\r\n"]},"metadata":{},"sourceType":"module"}