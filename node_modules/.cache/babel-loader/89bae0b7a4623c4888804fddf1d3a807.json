{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TXY1572\\\\darthsanity\\\\capstone\\\\frontend\\\\react-paws-app\\\\react-boilerplate\\\\src\\\\Components\\\\Posts\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport CreatePostForm from './CreatePostForm';\nimport EditPost from './EditPost';\nimport ShowPost from './ShowPost';\nimport AnimalProfileContainer from '../Profiles/AnimalProfileContainer';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newPost = async (e, values) => {\n      e.preventDefault();\n      const newPost = await createPost(values, this.props.user.id);\n      console.log(newPost);\n      const posts = this.state.posts;\n      posts.push(newPost.data);\n      this.setState({\n        posts: posts\n      });\n      this.props.history.push('/');\n    };\n\n    this.destroyPost = async id => {\n      await deletePost(id);\n      const allPosts = this.state.posts;\n      const remainingPosts = allPosts.filter(post => {\n        return post.id !== id;\n      });\n      this.setState({\n        posts: remainingPosts\n      });\n      this.props.history.push('/');\n    };\n\n    this.updatePost = async (e, id, values) => {\n      e.preventDefault();\n      const updatedPost = await editPost(id, values);\n      const allPosts = this.state.posts;\n      console.log(updatedPost);\n      const editedPost = allPosts.map(post => {\n        return post.id === parseInt(id) ? updatedPost : post;\n      });\n      this.setState({\n        posts: editedPost\n      });\n      this.props.history.push('/');\n    };\n\n    this.edit = id => {\n      const editPost = this.state.posts;\n      const updatedPost = editPost.map(post => {\n        return post._id === id ? post.edit = true : post.edit = false;\n      });\n      this.setState({\n        posts: updatedPost\n      });\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    const posts = await fetchAllPosts();\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.state.posts && this.state.posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 36\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Link, {\n        to: `/post/show/${post._id}`,\n        className: \"post-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 66\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: post.image,\n        alt: \"animal\",\n        width: \"25%\",\n        className: \"post-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"post-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, post.post), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, post.animal.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"edit-post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.edit(post._id);\n        },\n        className: \"post-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"Edit Post\"), post.editPost && /*#__PURE__*/React.createElement(EditPost, {\n        id: this.props.user.id,\n        post: post,\n        updatePost: this.updatePost,\n        postId: post._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 51\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/post/show/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(ShowPost, {\n          post: this.state.posts,\n          id: props.match.params.id,\n          destroyPost: this.destroyPost,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 40\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-nav-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/foxphone.png\",\n      alt: \"nav\",\n      width: \"35%\",\n      className: \"post-nav-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), this.props.user && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-nav-links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      className: \"post-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, \"Profile \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/parrot.png\",\n      alt: \"link\",\n      width: \"5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 82\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/post/new\",\n      className: \"post-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, \"Create New Post \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/kittencat.png\",\n      alt: \"link\",\n      width: \"5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 91\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/critter\",\n      className: \"post-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, \"Your Critters \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/fish.png\",\n      alt: \"link\",\n      width: \"5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 88\n      }\n    }), \" \"))), /*#__PURE__*/React.createElement(Route, {\n      path: \"/critter/all\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(AnimalProfileContainer, {\n          user: this.props.user,\n          animals: this.props.animals,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 32\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(PostContainer);","map":{"version":3,"sources":["C:/Users/TXY1572/darthsanity/capstone/frontend/react-paws-app/react-boilerplate/src/Components/Posts/PostContainer.js"],"names":["React","Component","fetchAllPosts","createPost","editPost","deletePost","Route","Link","withRouter","CreatePostForm","EditPost","ShowPost","AnimalProfileContainer","PostContainer","constructor","props","newPost","e","values","preventDefault","user","id","console","log","posts","state","push","data","setState","history","destroyPost","allPosts","remainingPosts","filter","post","updatePost","updatedPost","editedPost","map","parseInt","edit","_id","componentDidMount","render","image","animal","name","match","params","animals"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\n\r\n\r\nimport CreatePostForm from './CreatePostForm';\r\nimport EditPost from './EditPost';\r\nimport ShowPost from './ShowPost';\r\nimport AnimalProfileContainer from '../Profiles/AnimalProfileContainer'\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const posts = await fetchAllPosts();\r\n        this.setState({\r\n            posts\r\n        })\r\n    }\r\n\r\n    newPost = async (e, values) => {\r\n      e.preventDefault();\r\n      const newPost = await createPost(values, this.props.user.id);\r\n      console.log(newPost);\r\n      const posts = this.state.posts;\r\n      posts.push(newPost.data);\r\n      this.setState({\r\n          posts: posts\r\n      })\r\n      this.props.history.push('/')\r\n    }\r\n\r\n    destroyPost = async(id) => {\r\n      await deletePost(id);\r\n      const allPosts = this.state.posts;\r\n      const remainingPosts = allPosts.filter(post => {\r\n          return post.id !== id\r\n      })\r\n      this.setState({\r\n          posts: remainingPosts\r\n      })\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    updatePost = async(e, id, values) => {\r\n        e.preventDefault();\r\n        const updatedPost = await editPost(id, values);\r\n        const allPosts = this.state.posts;\r\n        console.log(updatedPost)\r\n        const editedPost = allPosts.map(post => {\r\n            return post.id === parseInt(id) ? updatedPost : post\r\n        })\r\n        this.setState({\r\n            posts: editedPost\r\n        })\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    edit = (id) => {\r\n        const editPost = this.state.posts;\r\n        const updatedPost = editPost.map(post => {\r\n            return post._id === id ? post.edit = true : post.edit = false;\r\n        })\r\n        this.setState({\r\n            posts: updatedPost\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post-page\">\r\n                <div className=\"post-container\">\r\n                    <div className=\"main-post\">\r\n                        {this.state.posts && this.state.posts.map(post => {\r\n                            return <div className=\"post-holder\"> <Link to={`/post/show/${post._id}`} className=\"post-link\">\r\n                                <img src={post.image} alt=\"animal\" width=\"25%\" className=\"post-image\"/>\r\n                                <p className=\"post-text\">{post.post}</p>\r\n                                <p>{post.animal.name}</p>\r\n                                </Link>\r\n                                <div className=\"edit-post\">\r\n                                <button onClick={() => {this.edit(post._id)}} className=\"post-edit\">Edit Post</button>\r\n                                {post.editPost && <EditPost\r\n                                    id={this.props.user.id}\r\n                                    post={post}\r\n                                    updatePost={this.updatePost}\r\n                                    postId={post._id}\r\n                                />}\r\n                            </div>\r\n                        </div>\r\n                        })}\r\n\r\n                        <Route path='/post/show/:id' render={(props) => {\r\n                                return <ShowPost\r\n                                    post={this.state.posts}\r\n                                    id={props.match.params.id}\r\n                                    destroyPost={this.destroyPost}\r\n                                />\r\n                            }}/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                    <div className=\"post-nav-main\">\r\n                        <img src=\"/foxphone.png\" alt=\"nav\" width=\"35%\" className=\"post-nav-image\" />\r\n                            {this.props.user && <div className=\"post-nav-links\">\r\n                                <Link to=\"/profile\" className=\"post-nav\">Profile <img src=\"/parrot.png\" alt=\"link\" width=\"5%\" /> </Link>\r\n                                <Link to=\"/post/new\" className=\"post-nav\">Create New Post <img src=\"/kittencat.png\" alt=\"link\" width=\"5%\" /> </Link>\r\n                                <Link to=\"/critter\" className=\"post-nav\">Your Critters <img src=\"/fish.png\" alt=\"link\" width=\"5%\" /> </Link>\r\n                                </div>\r\n                            }\r\n                    </div>\r\n                    <Route path=\"/critter/all\" render={() => {\r\n                        return <AnimalProfileContainer user={this.props.user} animals={this.props.animals}/>\r\n                    }}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PostContainer);\r\n"]},"metadata":{},"sourceType":"module"}