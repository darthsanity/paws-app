{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TXY1572\\\\darthsanity\\\\capstone\\\\frontend\\\\react-paws-app\\\\react-boilerplate\\\\src\\\\Components\\\\Posts\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { fetchAllPosts, editPost } from '../../services/apihelper';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport EditPost from './EditPost';\nimport AnimalProfileContainer from '../Profiles/AnimalProfileContainer';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePost = async (e, id, values) => {\n      e.preventDefault();\n      const updatedPost = await editPost(id, values);\n      const allPosts = this.state.posts;\n      console.log(updatedPost);\n      const editedPost = allPosts.map(post => {\n        return post.id === parseInt(id) ? updatedPost : post;\n      });\n      this.setState({\n        posts: editedPost\n      });\n      this.props.history.push('/');\n    };\n\n    this.edit = id => {\n      const editPost = this.state.posts;\n      const updatedPost = editPost.map(post => {\n        if (post._id === id) {\n          post.edit = true;\n        } else {\n          post.edit = false;\n        }\n\n        return post;\n      });\n      this.setState({\n        posts: updatedPost\n      });\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    const posts = await fetchAllPosts();\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    console.log(this.state.posts);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, this.state.posts && this.state.posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post-holder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Link, {\n        to: `/post/show/${post._id}`,\n        className: \"post-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 66\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: post.image,\n        alt: \"animal\",\n        width: \"25%\",\n        className: \"post-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"post-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, post.post), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, post.animal.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"edit-post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.edit(post._id);\n        },\n        className: \"post-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, \"Edit Post\"), post.edit && /*#__PURE__*/React.createElement(EditPost, {\n        id: this.props.user.id,\n        post: post,\n        updatePost: this.updatePost,\n        postId: post._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 47\n        }\n      })));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-nav-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/foxphone.png\",\n      alt: \"nav\",\n      width: \"35%\",\n      className: \"post-nav-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), this.props.user && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-nav-links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      className: \"post-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, \"Profile \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/parrot.png\",\n      alt: \"link\",\n      width: \"5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 82\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/post/new\",\n      className: \"post-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, \"Create New Post \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/kittencat.png\",\n      alt: \"link\",\n      width: \"5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 91\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/critter\",\n      className: \"post-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, \"Your Critters \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/fish.png\",\n      alt: \"link\",\n      width: \"5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 88\n      }\n    }), \" \"))), /*#__PURE__*/React.createElement(Route, {\n      path: \"/critter/all\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(AnimalProfileContainer, {\n          user: this.props.user,\n          animals: this.props.animals,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 32\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(PostContainer);","map":{"version":3,"sources":["C:/Users/TXY1572/darthsanity/capstone/frontend/react-paws-app/react-boilerplate/src/Components/Posts/PostContainer.js"],"names":["React","Component","fetchAllPosts","editPost","Route","Link","withRouter","EditPost","AnimalProfileContainer","PostContainer","constructor","props","updatePost","e","id","values","preventDefault","updatedPost","allPosts","state","posts","console","log","editedPost","map","post","parseInt","setState","history","push","edit","_id","componentDidMount","render","image","animal","name","user","animals"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchAllPosts, editPost, } from '../../services/apihelper';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\n\r\n\r\nimport EditPost from './EditPost';\r\nimport AnimalProfileContainer from '../Profiles/AnimalProfileContainer'\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const posts = await fetchAllPosts();\r\n        this.setState({\r\n            posts\r\n        })\r\n    }\r\n\r\n    updatePost = async(e, id, values) => {\r\n        e.preventDefault();\r\n        const updatedPost = await editPost(id, values);\r\n        const allPosts = this.state.posts;\r\n        console.log(updatedPost)\r\n        const editedPost = allPosts.map(post => {\r\n            return post.id === parseInt(id) ? updatedPost : post\r\n        })\r\n        this.setState({\r\n            posts: editedPost\r\n        })\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    edit = (id) => {\r\n        const editPost = this.state.posts;\r\n        const updatedPost = editPost.map(post => {\r\n            if(post._id === id) {post.edit = true}\r\n            else {post.edit = false}\r\n            return post\r\n        })\r\n        this.setState({\r\n            posts: updatedPost\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state.posts)\r\n        return (\r\n            <div className=\"post-page\">\r\n                <div className=\"post-container\">\r\n                    <div className=\"main-post\">\r\n                        {this.state.posts && this.state.posts.map(post => {\r\n                            return <div className=\"post-holder\"> <Link to={`/post/show/${post._id}`} className=\"post-link\">\r\n                                <img src={post.image} alt=\"animal\" width=\"25%\" className=\"post-image\"/>\r\n                                <p className=\"post-text\">{post.post}</p>\r\n                                <p>{post.animal.name}</p>\r\n                                </Link>\r\n                                <div className=\"edit-post\">\r\n                                <button onClick={() => {this.edit(post._id)}} className=\"post-edit\">Edit Post</button>\r\n                                {post.edit && <EditPost\r\n                                    id={this.props.user.id}\r\n                                    post={post}\r\n                                    updatePost={this.updatePost}\r\n                                    postId={post._id}\r\n                                />}\r\n                            </div>\r\n                        </div>\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                    <div className=\"post-nav-main\">\r\n                        <img src=\"/foxphone.png\" alt=\"nav\" width=\"35%\" className=\"post-nav-image\" />\r\n                            {this.props.user && <div className=\"post-nav-links\">\r\n                                <Link to=\"/profile\" className=\"post-nav\">Profile <img src=\"/parrot.png\" alt=\"link\" width=\"5%\" /> </Link>\r\n                                <Link to=\"/post/new\" className=\"post-nav\">Create New Post <img src=\"/kittencat.png\" alt=\"link\" width=\"5%\" /> </Link>\r\n                                <Link to=\"/critter\" className=\"post-nav\">Your Critters <img src=\"/fish.png\" alt=\"link\" width=\"5%\" /> </Link>\r\n                                </div>\r\n                            }\r\n                    </div>                    \r\n\r\n                    <Route path=\"/critter/all\" render={() => {\r\n                        return <AnimalProfileContainer user={this.props.user} animals={this.props.animals}/>\r\n                    }}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PostContainer);\r\n"]},"metadata":{},"sourceType":"module"}