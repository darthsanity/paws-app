{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TXY1572\\\\darthsanity\\\\capstone\\\\frontend\\\\react-paws-app\\\\react-boilerplate\\\\src\\\\Components\\\\Posts\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport CreatePostForm from './CreatePostForm';\nimport EditPost from './EditPost';\nimport ShowPost from './ShowPost';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createPost = async (e, values) => {\n      e.prevenDefault();\n      const newPost = await createPost(values);\n      const posts = this.state.posts;\n      posts.push(newPost.data);\n      this.setState({\n        posts: posts\n      });\n    };\n\n    this.destroyPost = async id => {\n      await deletePost(id);\n      const allPosts = this.state.posts;\n      const remainingPosts = allPosts.filter(post => {\n        return post.id !== id;\n      });\n      this.setState({\n        posts: remainingPosts\n      });\n      this.props.history.push('/');\n    };\n\n    this.updatePost = async (e, id, values) => {\n      e.preventDefault();\n      const updatedPost = await editPost(id, values);\n      const allPosts = this.state.posts;\n      const editedPost = allPosts.map(post => {\n        return post.id === parseInt(id) ? updatedPost : post;\n      });\n      this.setState({\n        posts: editedPost\n      });\n      this.props.history.push('/posts');\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    const posts = await fetchAllPosts();\n    console.log(posts);\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.state.posts && this.state.posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Link, {\n        to: `/post/show/${post._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: post.image,\n        alt: \"animal\",\n        width: \"200px\",\n        height: \"200px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, post.post), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, post.animal.name)));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/posts/new\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(CreatePostForm, {\n          handleSubmit: this.createPost,\n          id: this.props.user.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 28\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/posts/edit/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(EditPost, {\n          posts: this.state.posts,\n          updatePost: this.updatePost,\n          postId: this.state.posts._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 32\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default PostContainer;","map":{"version":3,"sources":["C:/Users/TXY1572/darthsanity/capstone/frontend/react-paws-app/react-boilerplate/src/Components/Posts/PostContainer.js"],"names":["React","Component","fetchAllPosts","createPost","editPost","deletePost","Route","Link","withRouter","CreatePostForm","EditPost","ShowPost","PostContainer","constructor","props","e","values","prevenDefault","newPost","posts","state","push","data","setState","destroyPost","id","allPosts","remainingPosts","filter","post","history","updatePost","preventDefault","updatedPost","editedPost","map","parseInt","componentDidMount","console","log","render","_id","image","animal","name","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchAllPosts, createPost, editPost, deletePost } from '../../services/apihelper';\r\nimport { Route, Link, withRouter } from 'react-router-dom';\r\n\r\nimport CreatePostForm from './CreatePostForm';\r\nimport EditPost from './EditPost';\r\nimport ShowPost from './ShowPost'\r\n\r\nclass PostContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const posts = await fetchAllPosts();\r\n        console.log(posts);\r\n        this.setState({\r\n            posts\r\n        })\r\n    }\r\n\r\n    createPost = async (e, values) => {\r\n        e.prevenDefault();\r\n        const newPost = await createPost(values);\r\n        const posts = this.state.posts;\r\n        posts.push(newPost.data);\r\n        this.setState({\r\n            posts: posts            \r\n        })\r\n    }\r\n\r\n    destroyPost = async(id) => {\r\n        await deletePost(id);\r\n        const allPosts = this.state.posts;\r\n        const remainingPosts = allPosts.filter(post => {\r\n            return post.id !== id\r\n        })\r\n        this.setState({\r\n            posts: remainingPosts\r\n        })\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    updatePost = async(e, id, values) => {\r\n        e.preventDefault();\r\n        const updatedPost = await editPost(id, values);\r\n        const allPosts = this.state.posts;\r\n        const editedPost = allPosts.map(post => {\r\n            return post.id === parseInt(id) ? updatedPost : post\r\n        })        \r\n        this.setState({\r\n            posts: editedPost\r\n        })\r\n        this.props.history.push('/posts');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.posts && this.state.posts.map(post => {\r\n                    return <div> <Link to={`/post/show/${post._id}`}>\r\n                        <img src={post.image} alt=\"animal\" width=\"200px\" height=\"200px\" />\r\n                        <p>{post.post}</p>\r\n                        <p>{post.animal.name}</p>\r\n                        </Link>\r\n                    </div>\r\n                })} \r\n                <div>\r\n\r\n                <Route exact path=\"/posts/new\" render={() => {\r\n                    return <CreatePostForm handleSubmit={this.createPost}\r\n                        id={this.props.user.id}/>\r\n                }}/>\r\n                \r\n\r\n                <Route exact path=\"/posts/edit/:id\"\r\n                    render={(props) => {\r\n                        return <EditPost  \r\n                        posts={this.state.posts}\r\n                        updatePost={this.updatePost}\r\n                        postId={this.state.posts._id}\r\n                        />\r\n                    }}\r\n                />\r\n                \r\n            \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostContainer;"]},"metadata":{},"sourceType":"module"}